{"version":3,"sources":["CardsList.js","NavBar.js","Introduction.js","Outro.js","InfiniteScroll.js","index.js"],"names":["CardsList","props","NavBar","className","onClick","navHome","navProjects","navContact","Introduction","isMobile","Outro","divStyle","color","height","textAlign","padding","background","marginTop","containerStyle","maxWidth","margin","InifiniteScroll","useState","list","postList","setPostList","page","setPage","loader","useRef","useEffect","observer","IntersectionObserver","handleObserver","root","rootMargin","threshold","current","observe","newList","concat","entities","isIntersecting","style","map","post","index","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAmBeA,EAbC,SAACC,GAIjB,OACI,mCACA,4DC0BWC,EAhCA,SAACD,GAoBZ,OACI,sBAAKE,UAAU,kBAAf,UACI,qBAAKA,UAAU,aAAaC,QApBd,WAChBH,GACFA,EAAMI,aAmBF,qBAAKF,UAAU,iBAAiBC,QAdd,WACnBH,GACCA,EAAMK,iBAaN,qBAAKH,UAAU,gBAAgBC,QAVd,WAClBH,GACCA,EAAMM,oBCIHC,EAnBM,SAACP,GAGlB,OACI,qCACKA,EAAMQ,SACH,cAAC,EAAD,IAAa,GACjB,qBAAKN,UAAU,aAAf,kCCYGO,EArBD,WAEV,OACI,sBAAKP,UAAU,mBAAf,UACI,qBAAKA,UAAU,WAAf,yBACA,qBAAKA,UAAU,YACf,qBAAKA,UAAU,kBACf,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,iBACf,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,2BCT7BQ,EAAW,CACbC,MAAO,OACPC,OAAQ,QACRC,UAAW,SACXC,QAAS,WACTC,WAAY,OACZC,UAAW,QAGTC,EAAiB,CACnBC,SAAU,SACVC,OAAQ,UAgEGC,EA7DS,WACpB,MAAgCC,mBAAS,CACrCC,KAAO,CAAE,cAAC,EAAD,OADb,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAAwBH,mBAAS,GAAjC,mBAAOI,EAAP,KAAaC,EAAb,KAEMC,EAASC,iBAAO,MAEtBC,qBAAU,WACN,IAKMC,EAAW,IAAIC,qBAAqBC,EAL5B,CACVC,KAAM,KACNC,WAAY,OACZC,UAAW,IAGXR,EAAOS,SACPN,EAASO,QAAQV,EAAOS,WAE7B,IAEHP,qBAAU,WACN,GAAY,IAATJ,EAAW,CACV,IAAMa,EAAQf,EAASD,KAAKiB,OAAO,CAAC,cAAC,EAAD,MACpCf,EAAY,CACRF,KAAKgB,SAEP,GAAW,IAARb,EAAW,CAChB,IAAMa,EAAQf,EAASD,KAAKiB,OAAO,CAAC,cAAC,EAAD,MACpCf,EAAY,CACRF,KAAKgB,OAKf,CAACb,IAEH,IAAMO,EAAe,SAACQ,GACLA,EAAS,GACZC,gBACNf,GAAQ,SAACD,GAAD,OAAQA,EAAK,MAI7B,OAAQ,qBAAKvB,UAAU,YAAYwC,MAAOzB,EAAlC,SACJ,sBAAKf,UAAU,YAAf,UAEQqB,EAASD,KAAKqB,KAAI,SAACC,EAAMC,GACrB,OAAQ,qBACJ3C,UAAU,OACVwC,MAAOhC,EAFH,SAGJ,6BAAKkC,KAHSC,MAO1B,qBAAK3C,UAAU,UAAU4C,IAAKnB,EAA9B,SACI,mDCvEhBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,U","file":"static/js/main.ff9fd771.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\nconst CardsList=(props)=>{\r\n\r\n\r\n\r\nreturn(\r\n    <>\r\n    <div >This is the card List </div>\r\n    </>\r\n)\r\n}\r\n\r\n\r\n\r\nexport default CardsList;","import React, {\r\n    useState\r\n} from 'react';\r\n\r\n\r\n\r\nconst NavBar = (props) => {\r\n\r\n    const handleHomeNav = () => {\r\n       if(props){\r\n        props.navHome();\r\n       }\r\n        \r\n    }\r\n\r\n    const handleProjectsNav = () => {\r\n        if(props){\r\n            props.navProjects();\r\n        }\r\n    }\r\n    const handleContactNav = () => {\r\n        if(props){\r\n            props.navContact();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"NavBarContainer\">\r\n            <div className=\"ButtonHome\" onClick={handleHomeNav} />\r\n            <div className=\"Buttonprojects\" onClick={handleProjectsNav} />\r\n            <div className=\"ButtonContact\" onClick={handleContactNav} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default NavBar;","import React, {\r\n    useState\r\n} from 'react';\r\nimport NavBar from \"./NavBar\"\r\n\r\n\r\n\r\nconst Introduction = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            {props.isMobile ?\r\n                <NavBar /> : \"\"}\r\n            <div className=\"IntroTitle\">Itroduction Page</div>\r\n            {/* <img className=\"TopImageBackground\" src={props.image} alt=\"Background Image of Gym Equipment\" /> */}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Introduction;","import React, {\r\n    useState\r\n} from 'react';\r\n\r\n\r\nconst Outro = () => {\r\n\r\n    return (\r\n        <div className=\"OutroBoundingBox\">\r\n            <div className=\"TitleTop\">Outro Stuff</div>\r\n            <div className=\"LineTop\"></div>\r\n            <div className=\"PortraitOutro\"></div>\r\n            <div className=\"ContentContainerOutro\">\r\n                <div className=\"ContentOutro\"></div>\r\n                <div className=\"ButtonsContainerMiddle\">\r\n                    <div className=\"EmailButton\"></div>\r\n                    <div className=\"LinkenInButton\"></div>\r\n                    <div className=\"GithubButton\"></div>\r\n                </div>\r\n            </div>\r\n          \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Outro;","import React, {\r\n    useEffect,\r\n    useRef,\r\n    useState\r\n} from 'react';\r\nimport CardsList from './CardsList';\r\nimport Introduction from './Introduction';\r\nimport Outro from './Outro';\r\nconst divStyle = {\r\n    color: 'blue',\r\n    height: '250px',\r\n    textAlign: 'center',\r\n    padding: '5px 10px',\r\n    background: '#eee',\r\n    marginTop: '15px'\r\n};\r\n\r\nconst containerStyle = {\r\n    maxWidth: '1280px',\r\n    margin: '0 auto',\r\n}\r\n\r\nconst InifiniteScroll = () => {\r\n    const [postList, setPostList] = useState({\r\n        list:  [ <Introduction/> ]\r\n    });\r\n    const [page, setPage] = useState(0);\r\n\r\n    const loader = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let options = {\r\n            root: null,\r\n            rootMargin: \"20px\",\r\n            threshold: 1.0\r\n        };\r\n        const observer = new IntersectionObserver(handleObserver, options);\r\n        if (loader.current) {\r\n            observer.observe(loader.current)\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        if(page === 2){\r\n            const newList=postList.list.concat([<CardsList/>]);\r\n            setPostList({\r\n                list:newList\r\n            })\r\n        }else if(page ===3 ){\r\n            const newList=postList.list.concat([<Outro/>]);\r\n            setPostList({\r\n                list:newList\r\n            })\r\n\r\n        }\r\n      \r\n    },[page])\r\n\r\n    const handleObserver=(entities)=>{\r\n        const target=entities[0];\r\n        if(target.isIntersecting){\r\n            setPage((page)=>page+1)\r\n        }\r\n    }\r\n\r\n    return (<div className=\"container\" style={containerStyle}>\r\n        <div className=\"post-list\">\r\n            {\r\n                postList.list.map((post, index) => {\r\n                    return (<div key={index}\r\n                        className=\"post\"\r\n                        style={divStyle}>\r\n                        <h2>{post}</h2>\r\n                    </div>)\r\n                })\r\n            }\r\n            <div className=\"loading\" ref={loader}>\r\n                <h2>Load More</h2>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default InifiniteScroll;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport InifiniteScroll from './InfiniteScroll';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   <InifiniteScroll/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}